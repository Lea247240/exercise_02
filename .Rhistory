# načtení potřebných knihoven
library(RCandy)
library(ape)
library(tidyr)
tree.file <- 'D:/vse_roary_spades_bez_ref/accessory_binary_genes.fa.newick'
tree.file <- 'D:/gubbins_Roary_vse_spades_bez_ref/gubbins_Roary_vse_spades_bez_ref.final_tree.tre'
gubbins.gff <- 'D:/gubbins_Roary_vse_spades_bez_ref/gubbins_Roary_vse_spades_bez_ref.recombination_predictions.gff'
ref.genome.gff <- 'D:/VUT/Gubbins/vystup_roary/ncbigenom.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
title(main = "Moje vizualizace rekombinace s fylogenetickým stromem bez rekombinace")
tree.file <- 'D:/vse_roary_spades_bez_ref/accessory_binary_genes.fa.newick'
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/Rstudio-Roary_11/accessory_binary_genes.fa.newick'
tree.file <- 'D:/VUT/Gubbins/vystup_roary/Rstudio-Roary_11/gubbins_Roary_vse_spades.final_tree.tre'
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/Rstudio-Roary_11/gubbins_Roary_vse_spades.recombination_predictions.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/Rstudio-Roary_11/accessory_binary_genes.fa.newick'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/Rstudio-Roary_11/accessory_binary_genes.fa.newick'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/Rstudio-Roary_11/gubbins_Roary_vse_spades.recombination_predictions.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades.recombination_predictions.gff'
ref.genome.gff <- 'D:/VUT/Gubbins/vystup_roary/ncbigenom.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
tree.file <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades.final_tree.tre'
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
tree.file <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades_bez_ref.final_tree.tre'
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades_bez_ref.recombination_predictions.gff'
ref.genome.gff <- 'D:/VUT/Gubbins/vystup_roary/ncbigenom.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades_bez_ref.recombination_predictions.gff'
ref.genome.gff <- 'D:/VUT/Gubbins/vystup_roary/ncbigenom.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
tree.file <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades.final_tree.tre'
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades.recombination_predictions.gff'
ref.genome.gff <- 'D:/VUT/Gubbins/vystup_roary/ncbigenom.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení potřebných knihoven
library(RCandy)
library(ape)
library(tidyr)
tree.file <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades.final_tree.tre'
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_vse_spades.recombination_predictions.gff'
ref.genome.gff <- 'D:/VUT/Gubbins/vystup_roary/ncbigenom.gff'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# načtení cest k souboru
tree.file <- 'D:/VUT/Gubbins/vystup_roary/accessory_binary_genes.fa.newick'
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
# Načtení potřebných knihoven
library(RCandy)
library(ape)
library(tidyr)
# Načtení vstupních dat: strom, soubor metadat, referenční genom a události rekombinace generované Gubbinsem.
tree.file <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_moje_unicycler_bez_ref.final_tree.tre'
gubbins.gff <- 'D:/VUT/Gubbins/vystup_roary/gubbins_Roary_moje_unicycler_bez_ref.recombination_predictions.gff'
ref.genome.gff <- 'D:/VUT/Gubbins/vystup_roary/core_genes_reference_genomes_position_2_11U.gff'
#Pokud jsou události rekombinace generovány BRATNextGen, měla by být zadána tato možnost recom.input.type = "BRATNextGen" .
#Ve výchozím nastavení se předpokládá výstup z Gubbins ( recom.input.type = "Gubbins" )
# vizualizace detekce rekombinace pomocí RCandy
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
legend("topright", legend = c("Rekombinace sdílená více izoláty", "Rekombinace unikátní pro jeden izolát", "Genomová oblast bez informací", "Bez detekce rekombinace"), fill("red", "blue", "gray", "white"), border = "black", bty = "n", cex = 0.8)
#Pokud jsou události rekombinace generovány BRATNextGen, měla by být zadána tato možnost recom.input.type = "BRATNextGen" .
#Ve výchozím nastavení se předpokládá výstup z Gubbins ( recom.input.type = "Gubbins" )
# vizualizace detekce rekombinace pomocí RCandy
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)
legend("topright", legend = c("Rekombinace sdílená více izoláty", "Rekombinace unikátní pro jeden izolát", "Genomová oblast bez informací", "Bez detekce rekombinace"), fill("red", "blue", "gray", "white"), border = "black", bty = "n", cex = 0.8)
#Pokud jsou události rekombinace generovány BRATNextGen, měla by být zadána tato možnost recom.input.type = "BRATNextGen" .
#Ve výchozím nastavení se předpokládá výstup z Gubbins ( recom.input.type = "Gubbins" )
# vizualizace detekce rekombinace pomocí RCandy
RCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE,
,gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, show.fig.legend = FALSE)
legend("topright", legend = c("Rekombinace sdílená více izoláty", "Rekombinace unikátní pro jeden izolát", "Genomová oblast bez informací", "Bez detekce rekombinace"), fill("red", "blue", "gray", "white"), border = "black", bty = "n", cex = 0.8)
# pokus 2
plot(1, type = "n", axes = FALSE, xlab = "", ylab = "", xlim = c(0,1), ylim = c(0,1))
)
legend("center", legend = c("Červená: sdílená rekombinace", "Modrá: unikátní rekombinace", "Šedá: neinformativní oblasti", "Bílá: žádná rekombinace"),fill = c("red", "blue", "gray", "white"), border = "black", bty = "n", cex = 0.8, text.width = max(nchar(c("Červená: sdílená rekombinace", "Modrá: unikátní rekombinace", "Šedá: neinformativní oblasti", "Bílá: žádná rekombinace")))*0.02)
legend(x = 0.5, y = 0.5, legend = c("Červená: sdílená rekombinace", "Modrá: unikátní rekombinace", "Šedá: neinformativní oblasti", "Bílá: žádná rekombinace"),fill = c("red", "blue", "gray", "white"), border = "black", bty = "n", cex = 0.8, text.width = max(nchar(c("Červená: sdílená rekombinace", "Modrá: unikátní rekombinace", "Šedá: neinformativní oblasti", "Bílá: žádná rekombinace")))*0.02)
# pokus 2
plot(1, type = "n", axes = FALSE, xlab = "", ylab = "", xlim = c(0,1), ylim = c(0,1))
plot(1, type = "n", axes = FALSE, xlab = "", ylab = "", xlim = c(0,1), ylim = c(0,1))
cd
# find path
#setwd('V:/MPA_PRG/exercise_02')# PC VUT
setwd('D:/VUT/4-5rocnik/moje/MPA-PRG/exercise_02')
library(Biostrings)
# load data fishes.fna.gz
# with Biostring
dna <- readDNAStringSet('fishes.fna.gz', format = 'fasta')
sek <- readDNAStringSet('fishes.fna.gz', format = 'fasta')
# mělo by se najít něco okolo 4351
# ^AGGCT.CAATG$
# mid_f = ACGAGTGCGT
# mid_b = ACGCACTCGT
sek
pattern <- grep("^ACGAGTGCGT.*ACGCACTCGT$", sek, perl=TRUE)# nalezeni vzoru
pattern
sek[98] # asi sparavne
together <- paste0("^",midf,".*",midb,"$")
# mělo by se najít něco okolo 4351
# ^AGGCT.CAATG$
mid_f = ACGAGTGCGT
mid_b = ACGCACTCGT
# mělo by se najít něco okolo 4351
# ^AGGCT.CAATG$
mid_f ="ACGAGTGCGT"
mid_b = "ACGCACTCGT"
together <- paste0("^",midf,".*",midb,"$")
together <- paste0("^",mid_f,".*",mid_b,"$")
pattern1 <- grep(together, sek, perl=TRUE)# nalezeni vzoru
MID <- read.csv("fishes_MIDs.csv", sep = ";")
View(MID)
View(MID)
path <- setwd("V:/MPA_PRG/exercise_02")
#path <- setwd("V:/MPA_PRG/exercise_02") #- skolni pc
path <- setwd('D:/VUT/4-5rocnik/moje/MPA-PRG/exercise_02') #- doma pc
forward_mids <- MID[1]
View(forward_mids)
View(forward_mids)
forward_mids <- MID[2]
View(dna)
View(dna)
View(forward_mids)
View(forward_mids)
reverse_mids <- MID[3]
View(reverse_mids)
View(reverse_mids)
View(dna)
View(dna)
View(forward_mids)
View(forward_mids)
labels_list <- MID[1]
Demultiplexer <- function(path, forward_mids, reverse_mids, labels_list){
MID <- read.csv("path/fishes_MIDs.csv", sep = ";")
return MID
Demultiplexer <- function(path, forward_mids, reverse_mids, labels_list){
MID <- read.csv("path/fishes_MIDs.csv", sep = ";")
return (MID)
}
Demultiplexer <- function(path, forward_mids, reverse_mids, labels_list){
MID1 <- read.csv("path/fishes_MIDs.csv", sep = ";")
return (MID1)
}
MID1 <- read.csv("path/fishes_MIDs.csv", sep = ";")
together <- paste0(path, "/fishes_MIDs.csv")
MID1 <- read.csv(together, sep = ";")
Demultiplexer <- function(path, forward_mids, reverse_mids, labels_list){
together <- paste0(path, "/fishes_MIDs.csv")
MID2 <- read.csv(together, sep = ";")
return (MID2)
}
Demultiplexer <- function(path, forward_mids, reverse_mids, labels_list){
setwd(path)
#together <- paste0(path, "/fishes_MIDs.csv")
MID2 <- read.csv("fishes_MIDs.csv", sep = ";")
return (MID2)
}
Demultiplexer(path = 'D:/VUT/4-5rocnik/moje/MPA-PRG/exercise_02',forward_mids = forward_mids, reverse_mids = reverse_mids, labels_list = labels_list )
together <- paste0("^",forward_mids[0],".*",reverse_mids[0],"$")
pattern2 <- grep(together, sek, perl=TRUE)
patern2
pattern2
sek[987]
forward_mids[0]
forward_mids[1]
forward_mids[[1]]
forward_mids[[1][1]]
forward_mids <- MID[[2]]
reverse_mids <- MID[[3]]
labels_list <- MID[[1]]
forward_mids <- as.list(MID[[2]])
reverse_mids <- as.list(MID[[3]])
labels_list <- as.list(MID[[1]])
forward_mids[1]
forward_mids[0]
forward_mids[1]
#forward_mids[1]
together <- paste0("^",forward_mids[1],".*",reverse_mids[1],"$")
together
pattern2 <- grep(together, sek, perl=TRUE)
pattern2
